{"version":3,"sources":["gql/query.js","components/ProductModel.js","pages/home.js","components/UserModel.js","components/UserCommentsModel.js","pages/user.js","pages/index.js","App.js","reportWebVitals.js","index.js"],"names":["GET_PRODUCT_COMMENTS","gql","GET_PRODUCT","GET_USERS","GET_USER","GET_USER_COMMENTS","style","position","top","left","transform","width","bgcolor","boxShadow","p","backgroundColor","borderRadius","color","titleStyle","fontSize","mt","textStyle","ProductModelButton","styled","Button","ProductModel","productId","React","open","setOpen","useLazyQuery","getProductData","data","loading","error","setProductData","variables","id","onClick","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Box","sx","Typography","variant","component","product","name","description","price","created_at","CustomizedCard","Card","CustomizedCardMedia","CardMedia","CustomizedCardContent","CardContent","CustomizedTypography","CustomizedCardActions","CardActions","MultiActionAreaCard","props","useState","content","value","maxWidth","height","image","alt","gutterBottom","star","comment","Home","useQuery","Grid","container","spacing","product_comments","map","item","xs","marginBottom","UserModel","userId","getUser","setUser","user","phone","email","UserCommentsModelBox","UserCommentsModel","getUserComments","setUserComments","product_comment","StyledTableRow","TableRow","theme","palette","action","hover","border","User","TableContainer","Paper","Table","minWidth","TableHead","TableCell","align","TableBody","users","Pages","path","element","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","Fragment","CssBaseline","Container","fixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffc00fcb.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nconst GET_PRODUCT_COMMENTS = gql`\n    query { \n      product_comments(first: 10,page: 1) {\n        data {\n          product{\n            id\n            name\n          } \n          comment \n          star\n          created_at\n        }\n      }\n    }\n`\n\nconst GET_PRODUCT = gql`\n    query($id: ID!) { \n      product(id: $id) {\n        id\n        name\n        price\n        description\n        created_at\n      }\n    }\n`\n\nconst GET_USERS = gql`\n    query { \n      users(first: 10,page: 1) {\n        data {\n          id\n          name\n        }\n        paginatorInfo {\n          count\n          currentPage\n        }\n      }\n    }\n`\n\nconst GET_USER = gql`\n  query($id: ID!) { \n    user(id: $id) {\n      name\n      phone\n      email\n      created_at\n    }\n  }\n`\n\nconst GET_USER_COMMENTS = gql`\n  query($id: ID!) { \n    user(id: $id) {\n      name\n      product_comments {\n        product{\n          id\n          name\n        } \n        comment \n        star\n      } \n    }\n  }\n`\n\nexport {\n  GET_PRODUCT_COMMENTS,\n  GET_PRODUCT,\n  GET_USERS,\n  GET_USER,\n  GET_USER_COMMENTS\n};","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\n\nimport { useLazyQuery } from \"@apollo/client\"\nimport { GET_PRODUCT } from '../gql/query';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4,\n  backgroundColor: '#f1ecec',\n  borderRadius: '20px',\n  color: '#61464c'\n};\n\nconst titleStyle = {\n  fontSize: '26px',\n  mt: 2\n};\n\nconst textStyle = {\n  fontSize: '18px',\n  mt: 2\n};\n\nconst ProductModelButton = styled(Button)`\n  color: #a08585;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nconst ProductModel = ({productId}) => {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setProductData();\n  const handleClose = () => setOpen(false);\n\n  const [getProductData ,{ data, loading, error }] = useLazyQuery(GET_PRODUCT);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error!</p>;\n\n  const setProductData = () => {\n    const id = productId\n    getProductData({ variables: { id } })\n    setOpen(true);\n  }\n\n  return (\n    <div>\n      <ProductModelButton onClick={handleOpen}>Open modal</ProductModelButton>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <Box sx={style}>\n            <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\" sx={ titleStyle }>\n              {data?.product && data.product.name}\n            </Typography>\n            <Typography id=\"transition-modal-description\" sx={textStyle}>\n              Description: {data?.product && data.product.description}\n            </Typography>\n            <Typography id=\"transition-modal-description\" sx={textStyle}>\n              Price: {data?.product && data.product.price}\n            </Typography>\n            <Typography id=\"transition-modal-description\" sx={textStyle}>\n              Date Added: {data?.product && data.product.created_at}\n            </Typography>\n          </Box>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ProductModel;","import React, { useState } from 'react';\nimport { useQuery } from \"@apollo/client\"\n\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { CardActions } from '@mui/material';\n\nimport ProductModel from '../components/ProductModel';\n\n// import UserModel from '../components/UserModel';\n\nimport { GET_PRODUCT_COMMENTS } from '../gql/query';\n\nconst CustomizedCard = styled(Card)`\n    margin: 30px auto 0;\n    border-top-left-radius: 30px;\n    border-top-right-radius: 30px;\n    border-bottom-left-radius: 30px;\n    border-bottom-right-radius: 30px;\n    position: relative;\n    background-color: #f6f6f6;\n`;\n\nconst CustomizedCardMedia = styled(CardMedia)`\n  border-radius: 30px;\n  position: relative;\n  z-index: 2;\n`;\n\nconst CustomizedCardContent = styled(CardContent)`\n  color: white;\n  background-color: #ab877c;\n  padding-top: 50px;\n  padding-bottom: 30px;\n  position: relative;\n  top: -28px;\n  border-bottom-left-radius: 30px;\n  border-bottom-right-radius: 30px;\n`;\n\nconst CustomizedTypography = styled(Typography)`\n  color: white;\n`;\n\nconst CustomizedCardActions = styled(CardActions)`\n  background-color: #f6f6f6;\n  color: #9a7f7e;\n  justify-content: center;\n  position: relative;\n  top: -10px;\n`;\n\n\nconst MultiActionAreaCard = props => {\n    const [value, setValue] = useState({ content: props.content || '' });\n\n    return (\n      <CustomizedCard sx={{ maxWidth: 345 }}>\n        <CustomizedCardMedia\n          component=\"img\"\n          height=\"140\"\n          image=\"https://i.pinimg.com/564x/c3/09/13/c309132f5d48a6262199af1841b32c7a.jpg\"\n          alt=\"green iguana\"\n        />\n        <CustomizedCardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            {value.content.product.name}\n          </Typography>\n          <CustomizedTypography variant=\"body2\">\n            STAR: {value.content.star} ☆\n          </CustomizedTypography>\n          <CustomizedTypography variant=\"body2\">\n            COMMENT: {value.content.comment}\n          </CustomizedTypography>\n        </CustomizedCardContent>\n        <CustomizedCardActions>\n          <ProductModel productId = {value.content.product.id} />\n          {/* <CustomizedButton color=\"primary\">\n            View Product\n          </CustomizedButton> */}\n        </CustomizedCardActions>\n      </CustomizedCard>\n    );\n  }\n\nconst Home = () => {\n    const { loading, error, data } = useQuery(GET_PRODUCT_COMMENTS);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return (\n        <Grid container spacing={2}>\n        {data.product_comments.data.map((item) => (\n        \n            <Grid item xs={6} key={item.star}>\n                <div>\n                    <MultiActionAreaCard content={item} />\n                </div>\n            </Grid>\n        ))}\n      </Grid>\n    )\n};\n\nexport default Home","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\n\nimport { useLazyQuery } from \"@apollo/client\";\nimport { GET_USER } from '../gql/query';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4,\n  backgroundColor: '#f1ecec',\n  borderRadius: '20px',\n  color: '#61464c'\n};\n\nconst titleStyle = {\n  fontSize: '26px',\n  mt: 2,\n  marginBottom: '16px'\n};\n\nconst textStyle = {\n  fontSize: '18px',\n  mt: 2\n};\n\nconst ProductModelButton = styled(Button)`\n  color: #a08585;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nconst UserModel = ({userId}) => {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setUser();\n  const handleClose = () => setOpen(false);\n\n  const [getUser ,{ data, loading, error }] = useLazyQuery(GET_USER);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error!</p>;\n\n  const setUser = () => {\n    const id = userId\n    getUser({ variables: { id } })\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <ProductModelButton onClick={handleOpen}>Open User data</ProductModelButton>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <Box sx={style}>\n            <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\" sx={ titleStyle }>\n              {data?.user && data.user.name}\n            </Typography>\n            <Typography id=\"transition-modal-description\" sx={textStyle}>\n              Phone: {data?.user && data.user.phone}\n            </Typography>\n            <Typography id=\"transition-modal-description\" sx={textStyle}>\n              Email: {data?.user && data.user.email}\n            </Typography>\n            <Typography id=\"transition-modal-description\" sx={textStyle}>\n              Registration Date: {data?.user && data.user.created_at}\n            </Typography>\n          </Box>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default UserModel;","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\n\nimport { useLazyQuery } from \"@apollo/client\"\nimport { GET_USER_COMMENTS } from '../gql/query';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4,\n  backgroundColor: '#f1ecec',\n  borderRadius: '20px',\n  color: '#61464c'\n};\n\nconst titleStyle = {\n  fontSize: '26px',\n  mt: 2,\n  marginBottom: '16px'\n};\n\nconst textStyle = {\n  fontSize: '18px',\n  mt: 2\n};\n\nconst ProductModelButton = styled(Button)`\n  color: #a08585;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nconst UserCommentsModelBox = styled(Box)`\n  font-size: 18px;\n  font-weight: bold;\n  background-color: #ab877c;\n  color: white;\n  border-radius: 20px;\n  padding: 15px;\n  margin-bottom: 16px;\n`;\n\nconst UserCommentsModel = ({userId}) => {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setUserComments();\n  const handleClose = () => setOpen(false);\n\n  const [getUserComments ,{ data, loading, error }] = useLazyQuery(GET_USER_COMMENTS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error!</p>;\n\n  const setUserComments = () => {\n    const id = userId\n    getUserComments({ variables: { id } })\n    setOpen(true);\n  }\n\n  return (\n    <div>\n      <ProductModelButton onClick={handleOpen}>Open User Comments</ProductModelButton>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <Box sx={style}>\n            <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\" sx={ titleStyle }>\n              {data?.user && data.user.name}\n            </Typography>\n            {data?.user && data.user.product_comments.map((product_comment) => (\n              <UserCommentsModelBox>\n                <Typography id=\"transition-modal-description\" sx={textStyle}>\n                  Product: {product_comment.product.name}\n                </Typography>\n                <Typography id=\"transition-modal-description\" sx={textStyle}>\n                  Star: {product_comment.star}\n                </Typography>\n                <Typography id=\"transition-modal-description\" sx={textStyle}>\n                  Comment: {product_comment.comment}\n                </Typography>\n              </UserCommentsModelBox>\n            ))}\n          </Box>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default UserCommentsModel","import React from 'react';\n\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport UserModel from '../components/UserModel';\nimport UserCommentsModel from '../components/UserCommentsModel';\n\nimport { useQuery } from \"@apollo/client\"\nimport { GET_USERS } from '../gql/query';\n\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n\nexport default function User() {\n\n  const { data, loading, error } = useQuery(GET_USERS);\n\n  if (loading) return <p>Loading...</p>;\n  // if there is an error fetching the data, display an error message\n  if (error) return <p>Error!</p>;\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">ID</TableCell>\n            <TableCell align=\"right\">Name</TableCell>\n            <TableCell align=\"right\">User</TableCell>\n            <TableCell align=\"right\">User Comments</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.users.data.map((user) => (\n            <StyledTableRow\n              key={user.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell align=\"right\">{user.id}</TableCell>\n              <TableCell align=\"right\">{user.name}</TableCell>\n              <TableCell align=\"right\"><UserModel userId = {user.id}/></TableCell>\n              <TableCell align=\"right\"><UserCommentsModel userId = {user.id} /></TableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n// const User = () => {\n//     return (\n//         <div>\n//             <h1>notedly</h1>\n//             <p>User page</p>\n//         </div>\n//     );\n// };\n\n// export default User","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\n\nimport Home from \"./home\";\nimport User from \"./user\";\n\nconst Pages = () => {\n    return (\n        <BrowserRouter>\n        <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/user\" element={<User/>} />\n        </Routes>\n        </BrowserRouter>\n    )\n}\n\nexport default Pages","import React from \"react\";\n// import { render } from \"react-dom\";\nimport Pages from './pages';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\n\n\nimport { ApolloClient, InMemoryCache, ApolloProvider} \nfrom \"@apollo/client\";\n\n\nconst client = new ApolloClient({\n  uri: \"https://pw4e2pcbni.ap-northeast-1.awsapprunner.com/graphql\",\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <React.Fragment>\n        <CssBaseline />\n        <Container fixed>\n          <Pages />\n        </Container>\n      </React.Fragment>\n    </ApolloProvider>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}